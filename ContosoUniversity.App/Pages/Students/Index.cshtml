@page "Students/Index"
@model ContosoUniversity.App.Pages.Students.IndexModel

@{
    ViewData["Title"] = "Index";   
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<div class="container">
    <div class="row">
    <form asp-page="./Index" method="get">
        <div class="form-actions no-color">
            <p>
                Find by name:
                <input type="text" name="SearchString" value="@Model.CurrentFilter" />
                <input type="submit" value="Search" class="btn btn-primary" />
                <a asp-page="./Index">Back to full List</a>
            </p>
        </div>
    </form>
    </div>
    <div class="row">
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.LastNameSort"
                       asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Student[0].LastName)
                    </a>
                </th>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                       asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Student[0].FirstMidName)
                    </a>
                </th>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                       asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Student[0].EnrollmentDate)
                    </a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Student)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstMidName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EnrollmentDate)
                    </td>
                    <td>
                        <a asp-page="./Edit" 
                            asp-route-id="@item.Id"
                            asp-route-pageIndex="@(Model.Student.PageIndex)"
                            asp-route-currentPageSize="@Model.CurrentPageSize"
                            asp-route-currentFilter="@Model.CurrentFilter"
                               asp-route-searchString="@Model.SearchString">Edit</a> |
                        <a asp-page="./Details" asp-route-id="@item.Id"
                               asp-route-pageIndex="@(Model.Student.PageIndex)"
                               asp-route-currentPageSize="@Model.CurrentPageSize"
                               asp-route-currentFilter="@Model.CurrentFilter"
                               asp-route-searchString="@Model.SearchString">Details</a> |
                        <a asp-page="./Delete" asp-route-id="@item.Id"
                               asp-route-pageIndex="@(Model.Student.PageIndex)"
                               asp-route-currentPageSize="@Model.CurrentPageSize"
                               asp-route-currentFilter="@Model.CurrentFilter"
                               asp-route-searchString="@Model.SearchString">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    </div>
</div>
@{
    var prevDisabled = !Model.Student.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Student.HasNextPage ? "disabled" : "";

}
  <div class="row">
        <div class="col">
            <nav aria-label="Page navigation example">
                <ul class="pagination">
                    <li class="page-item">
                        <a asp-page="./Index"
                           asp-route-sortOrder="@Model.CurrentSort"
                           asp-route-pageIndex="@(Model.Student.PageIndex - 1)"
                           asp-route-currentPageSize="@Model.CurrentPageSize"
                           asp-route-currentFilter="@Model.CurrentFilter"
                           class="btn btn-primary @prevDisabled">
                            Previous
                        </a>
                    </li>
                    @{
                        for (int pageNumber = 1; pageNumber <= @Model.Student.TotalPages; pageNumber++)
                        {
                            if (Model.Student.PageIndex == pageNumber) { Model.Active = "active"; } else { Model.Active = ""; }

                            <li class="page-item @Model.Active">
                                <a asp-page="./Index"
                                   asp-route-sortOrder="@Model.CurrentSort"
                                   asp-route-pageIndex="@pageNumber"
                                   asp-route-currentPageSize="@Model.CurrentPageSize"
                                   asp-route-currentFilter="@Model.CurrentFilter"
                                   class="page-link">
                                    @pageNumber
                                </a>
                            </li>

                        }
                    }
                    <li class="page-item">
                        <a asp-page="./Index"
                           asp-route-sortOrder="@Model.CurrentSort"
                           asp-route-pageIndex="@(Model.Student.PageIndex + 1)"
                           asp-route-currentPageSize="@Model.CurrentPageSize"
                           asp-route-currentFilter="@Model.CurrentFilter"
                           class="btn btn-primary @nextDisabled">
                            Next
                        </a>
                    </li>

                </ul>
            </nav>
            </<div>
            <div class="col">
                    <form asp-page="./Index" method="get">
                        <label for="currentPageSize">Page Size:</label>
                        <select class="form-select-sm" name="currentPageSize" onchange="this.form.submit()">
                            <option value="5" selected="@(Model.CurrentPageSize == 5 ? true : false)">5</option>
                            <option value="10" selected="@(Model.CurrentPageSize == 10 ? true : false)">10</option>
                            <option value="20" selected="@(Model.CurrentPageSize == 20 ? true : false)">20</option>
                            <option value="30" selected="@(Model.CurrentPageSize == 30 ? true : false)">30</option>
                            <option value="40" selected="@(Model.CurrentPageSize == 40 ? true : false)">40</option>
                            <option value="50" selected="@(Model.CurrentPageSize == 50 ? true : false)">50</option>
                        </select>
                        <label for="totalCount">Total Count: @Model.TotalCount</label>
                    </form>
             </div>
     </div>
</div>
</div>



